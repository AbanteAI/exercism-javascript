FAIL exercises/practice/poker/poker.spec.js
  Poker
    ✕ single hand always wins (2 ms)
    ○ skipped highest card out of all hands wins
    ○ skipped a tie has multiple winners
    ○ skipped multiple hands with the same high cards, tie compares next highest ranked, down to last card
    ○ skipped one pair beats high card
    ○ skipped highest pair wins
    ○ skipped two pairs beats one pair
    ○ skipped both hands have two pairs, highest ranked pair wins
    ○ skipped both hands have two pairs, with the same highest ranked pair, tie goes to low pair
    ○ skipped both hands have two identically ranked pairs, tie goes to remaining card (kicker)
    ○ skipped three of a kind beats two pair
    ○ skipped both hands have three of a kind, tie goes to highest ranked triplet
    ○ skipped with multiple decks, two players can have same three of a kind, ties go to highest remaining cards
    ○ skipped a straight beats three of a kind
    ○ skipped aces can end a straight (10 J Q K A)
    ○ skipped aces can start a straight (A 2 3 4 5)
    ○ skipped both hands with a straight, tie goes to highest ranked card
    ○ skipped even though an ace is usually high, a 5-high straight is the lowest-scoring straight
    ○ skipped flush beats a straight
    ○ skipped both hands have a flush, tie goes to high card, down to the last one if necessary
    ○ skipped full house beats a flush
    ○ skipped both hands have a full house, tie goes to highest-ranked triplet
    ○ skipped with multiple decks, both hands have a full house with the same triplet, tie goes to the pair
    ○ skipped four of a kind beats a full house
    ○ skipped both hands have four of a kind, tie goes to high quad
    ○ skipped with multiple decks, both hands with identical four of a kind, tie determined by kicker
    ○ skipped straight flush beats four of a kind
    ○ skipped both hands have straight flush, tie goes to highest-ranked card

  ● Poker › single hand always wins

    TypeError: hand.map is not a function

       7 |   // Helper function to check if a hand is a straight
       8 |   const isStraight = (hand) => {
    >  9 |     const sortedValues = hand.map((card) => card.value).sort((a, b) => a - b);
         |                               ^
      10 |     return sortedValues.every((value, index) => value === sortedValues[0] + index);
      11 |   };
      12 |

      at map (exercises/practice/poker/poker.js:9:31)
      at isStraight (exercises/practice/poker/poker.js:20:37)
      at isStraightFlush (exercises/practice/poker/poker.js:105:9)
      at getHandType (exercises/practice/poker/poker.js:77:23)
      at compareHands (exercises/practice/poker/poker.js:148:24)
          at Array.reduce (<anonymous>)
      at reduce (exercises/practice/poker/poker.js:147:26)
      at Object.<anonymous> (exercises/practice/poker/poker.spec.js:7:21)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 27 skipped, 28 total
Snapshots:   0 total
Time:        0.774 s
Ran all test suites matching /exercises\/practice\/poker/i.
